apiVersion: v1
kind: Service
metadata:
  name: hapi
spec:
  selector:
    app: hapi
  ports:
    - port: 3005
      targetPort: 3005
      protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hapi-secrets
  labels:
    version: ${VERSION}
data:
  HAPI_SERVER_PORT: ${HAPI_SERVER_PORT}
  HAPI_SERVER_ADDRESS: ${HAPI_SERVER_ADDRESS}
  HAPI_EOS_API_ENDPOINT: ${HAPI_EOS_API_ENDPOINT}
  HAPI_EOS_API_CHAIN_ID: ${HAPI_EOS_API_CHAIN_ID}
  HAPI_EOS_BASE_ACCOUNT: ${HAPI_EOS_BASE_ACCOUNT}
  HAPI_EOS_BASE_ACCOUNT_PASSWORD: ${HAPI_EOS_BASE_ACCOUNT_PASSWORD}
  HAPI_EOS_AUTHORITY_FOR_NEW_ACCOUNTS: ${HAPI_EOS_AUTHORITY_FOR_NEW_ACCOUNTS}
  HAPI_EOS_WALLET_URL: ${HAPI_EOS_WALLET_URL}
  HAPI_HASURA_URL: ${HAPI_HASURA_URL}
  HAPI_HASURA_ADMIN_SECRET: ${HAPI_HASURA_ADMIN_SECRET}
  HAPI_JWT_ISS: ${HAPI_JWT_ISS}
  HAPI_JWT_SECRET: ${HAPI_JWT_SECRET}
  HAPI_JWT_ALGORITHM: ${HAPI_JWT_ALGORITHM}
  HAPI_SIMPLEASSETS_ACCOUNT: ${HAPI_SIMPLEASSETS_ACCOUNT}
  HAPI_SIMPLEASSETS_MAX_ALLOWED_ASSETS_PER_TRANSACTION: ${HAPI_SIMPLEASSETS_MAX_ALLOWED_ASSETS_PER_TRANSACTION}
  HAPI_RABBITMQ_API_ENDPOINT: ${HAPI_RABBITMQ_API_ENDPOINT}
  HAPI_RABBITMQ_ASSET_QUEUE: ${HAPI_RABBITMQ_ASSET_QUEUE}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hapi
  name: hapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hapi
  template:
    metadata:
      labels:
        app: hapi
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - image: ${DOCKER_REGISTRY}/${IMAGE_NAME_HAPI}:${VERSION}
          name: hapi
          ports:
            - containerPort: 3005
          resources:
            requests:
              cpu: 200m
            limits:
              cpu: '1'
          envFrom:
            - configMapRef:
                name: hapi-secrets
